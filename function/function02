功能 2 findHccEventBranchInfo — 查詢使用者符合活動資格的分館清單
請求參數
參數名稱
說明
hccEventType
活動類型（e.g. NORMAL_DEDUCT_POINT）
memberTypes
使用者所屬的會員類型列表（e.g. SOGO_VIP, SOGO_VVIP）
appId
使用者 App ID


範例輸入
{
    "hccEventType": "NORMAL_DEDUCT_POINT",
    "memberTypes": ["SOGO_VIP", "SOGO_VVIP"],
    "appId": "A000111222"
}


回傳資料
欄位名稱
說明
branchId
分館代碼（如：BRANCH_JS）
branchName
分館名稱（如：忠孝館）


範例回傳
[
    {
        "branchId": "BRANCH_JS",
        "branchName": "忠孝館"
    },
    {
        "branchId": "BRANCH_FS",
        "branchName": "復興館"
    }
]

邏輯說明：
僅挑選目前進行中 (USING) 的活動，且時間仍介於 exchange_start_date 和 exchange_end_date 間。
活動必須是只限 App 用戶參與（only_app = 'Y'）。
活動類型需符合傳入參數 hccEventType。
活動若是針對所有會員開放，則無需檢查參加者 (hea)；否則必須檢查指定的 app_id 是在參加者名單內。
若為 CLUB 類型活動（如 CLUB_DEDUCT_POINT），還需檢查使用者是否具備適用的會員類型 (memberTypes)。
查詢結果只返回符合條件的活動適用的分館（branch），去除重覆資料（DISTINCT）。
SELECT DISTINCT he.branch -- 活動所屬分館（去重）
FROM gif_hcc_event he
LEFT JOIN gif_event e
  ON he.event_no = e.event_no -- 加入活動通用資訊（狀態、時間範圍等）
LEFT JOIN gif_hcc_event_attendee hea
  ON he.event_no = hea.event_no -- 加入該活動的參加者資料
LEFT JOIN gif_hcc_event_member_type hem
  ON he.event_no = hem.event_no -- 加入該活動支援的會員類型資料
WHERE 1 = 1
  -- 時間條件：活動正在進行中
  AND e.exchange_start_date < LOCALTIMESTAMP
  AND e.exchange_end_date >= LOCALTIMESTAMP

  -- 活動狀態為啟用中
  AND e.event_status = 'USING'
  
  -- 活動限定App用戶
  AND he.only_app = 'Y'
  
  -- 活動類型必須符合參數（如NORMAL_DEDUCT_POINT）
  AND he.hcc_event_type = :hccEventType
  
  -- 活動對象：若非開放所有會員，則 appId 必須在名單內
  AND (
      he.all_member = 'Y'
      OR (he.all_member = 'N' AND hea.app_id = :appId)
  )
  
  -- 若為 CLUB 類型活動，則 memberType 必須符合資格
  AND (
      he.hcc_event_type <> 'CLUB_DEDUCT_POINT'
      OR (hem.member_type IN (:memberTypes))
  );

=================================================
功能 2 findHccEventBranchInfo — 查詢使用者符合活動資格的分館清單
const hccEventType = "NORMAL_DEDUCT_POINT";
const memberTypes = ["SOGO_VIP", "SOGO_VVIP"];
const appId = "A000111222";
const now = new Date();

db.events.aggregate([

  // 🧊 1. 時間條件與活動類型初步過濾
  {
    $match: {
      eventStatus: "USING",                // 活動必須是啟用狀態
      onlyApp: true,                       // 僅限 App 活動
      hccEventType: hccEventType,          // 活動類型符合輸入
      startDate: { $lte: now },            // 活動已開始
      endDate: { $gte: now },              // 活動尚未結束
      $or: [
        { hccEventType: { $ne: "CLUB_DEDUCT_POINT" } },       // 非 CLUB 類型
        { memberTypes: { $in: memberTypes } }                 // 或符合會員類型
      ]
    }
  },

  // 🧩 2. 使用者是否在名單內：用 LEFT JOIN 方式找出是否為參與者
  {
    $lookup: {
      from: "event_attendees",
      let: { eventNo: "$eventNo" },
      pipeline: [
        {
          $match: {
            $expr: {
              $and: [
                { $eq: ["$eventNo", "$$eventNo"] },
                { $eq: ["$appId", appId] }
              ]
            }
          }
        },
        { $limit: 1 }
      ],
      as: "matchedAttendee"
    }
  },

  // ✅ 3. 根據會員開放與參加者名單進行資格過濾
  {
    $match: {
      $or: [
        { allMember: true },                       // 若為全會員皆可參與
        { "matchedAttendee.0": { $exists: true } } // 否則需 appId 存在於參加者名單
      ]
    }
  },

  // 📦 4. 將 usingBranchIds 陣列拆散為單一列（每列一個分館代碼）
  { $unwind: "$usingBranchIds" },
  { $unwind: "$usingBranchNames" },

  // 📌 5. 聚合唯一的 branchId / branchName，避免重覆
  {
    $group: {
      _id: "$usingBranchIds",
      branchName: { $first: "$usingBranchNames" }
    }
  },

  // 🧾 6. 整理輸出欄位格式
  {
    $project: {
      _id: 0,
      branchId: "$_id",
      branchName: "$branchName"
    }
  }

]).toArray()



